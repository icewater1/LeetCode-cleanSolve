/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getHeight(TreeNode*root)
    {
        if(!root->left && !root->right)return 1;
        int heightLeft = (root->left)?getHeight(root->left):0;
        int heightRight = (root->right)?getHeight(root->right):0;
        return (1+max(heightLeft,heightRight));
    }
    bool isBalanced(TreeNode* root) {
        if(!root || (!root->left && !root->right))return true;
        
        int hL = (root->left)?getHeight(root->left):0;
        int hR = (root->right)?getHeight(root->right):0;
        
        return abs(hL-hR) <= 1 && isBalanced(root->left) && isBalanced(root->right);
    }
};
